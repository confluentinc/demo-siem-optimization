---
services:
  connect:
    build: ../kafka-connect
    hostname: connect
    container_name: connect
    ports:
      - "8083:8083"
      - "9997:9997"
      - "5140:5140/udp"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: $BOOTSTRAP_SERVERS
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: _demo-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _demo-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _demo-connect-status
      CONNECT_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: $SCHEMA_REGISTRY_URL
      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: $BASIC_AUTH_CREDENTIALS_SOURCE
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: $SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.2.0.jar
      # Connect worker
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONNECT_SASL_MECHANISM: PLAIN
      # Connect producer
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
      # Connect consumer
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
      # License topic
      CONFLUENT_TOPIC_BOOTSTRAP_SERVERS: $BOOTSTRAP_SERVERS
      CONFLUENT_TOPIC_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONFLUENT_TOPIC_SECURITY_PROTOCOL: SASL_SSL
      CONFLUENT_TOPIC_SASL_MECHANISM: PLAIN

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.8.0
    hostname: control-center
    container_name: control-center
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: $BOOTSTRAP_SERVERS
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: $SCHEMA_REGISTRY_URL
      CONTROL_CENTER_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: $BASIC_AUTH_CREDENTIALS_SOURCE
      CONTROL_CENTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: $SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: "connect:8083"
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_SSL
      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      CONTROL_CENTER_STREAMS_SASL_MECHANISM: PLAIN
      CONTROL_CENTER_REPLICATION_FACTOR: 3
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 3
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 3
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 3
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 3
      CONFLUENT_METRICS_TOPIC_REPLICATION: 3
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 3
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      # Workaround for MMA-3564
      CONTROL_CENTER_METRICS_TOPIC_MAX_MESSAGE_BYTES: 8388608
      PORT: 9021

  syslog-streamer:
    image: localbuild/syslog-tcpreplay-kafka
    build:
      context: ../syslog/image/syslog-tcpreplay-kafka
    platform: linux/amd64
    depends_on:
      - connect
    container_name: syslog-streamer
    hostname: syslog-streamer
    entrypoint: /start.sh
    volumes:
      - ../syslog/start.sh:/start.sh
      - ../syslog/pcaps:/pcaps
    cap_add:
      - NET_ADMIN

  zeek-streamer:
    image: localbuild/zeek-tcpreplay-kafka
    build:
      context: ../zeek/image/zeek-tcpreplay-kafka
    platform: linux/amd64
    container_name: zeek-streamer
    hostname: zeek-streamer
    entrypoint: /start.sh
    volumes:
      - ../zeek/start.sh:/start.sh
      - ../zeek:/usr/local/zeek/share/zeek/site
      - ./zeek/kafka:/usr/local/zeek/share/zeek/site/kafka
      - ../zeek/pcaps:/pcaps
    cap_add:
      - NET_ADMIN

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    depends_on:
      - connect
    healthcheck:
      start_period: 10s
      interval: 10s
      retries: 20
      test: curl --user "elastic:es_pass" -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      cluster.name: "elasticsearch-cp-demo"
      bootstrap.memory_lock: 'true'
      discovery.type: single-node
      ELASTIC_PASSWORD: es_pass
      xpack.security.enabled: 'false'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    restart: always
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://kibana:5601/api/status || exit 1
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      NEWSFEED_ENABLED: 'false'
      TELEMETRY_OPTIN: 'false'
      TELEMETRY_ENABLED: 'false'
      SERVER_MAXPAYLOADBYTES: 4194304
      KIBANA_AUTOCOMPLETETIMEOUT: 3000
      KIBANA_AUTOCOMPLETETERMINATEAFTER: 2500000

  splunk:
    image: splunk/splunk:8.2.1
    depends_on:
      - connect
    platform: linux/amd64
    container_name: splunk
    hostname: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_HEC_TOKEN=ef16f05f-40e0-4108-a644-5323e02aaa44
      - SPLUNK_PASSWORD
      - SPLUNK_APPS_URL=https://raw.githubusercontent.com/JohnnyMirza/confluent_splunk_demo/main/splunk-add-on-for-cisco-asa_410.tgz
    ports:
      - 8000:8000
      - 8090:8090
    volumes:
      - ../splunk/default.yml:/tmp/defaults/default.yml
      - ../splunk/splunk-search/:/opt/splunk/etc/apps/splunk-search

  splunk_uf1:
      image: splunk/universalforwarder:8.2.1
      platform: linux/amd64
      hostname: splunk_uf1
      container_name: splunk_uf1
      depends_on:
        - connect
      environment:
        - SPLUNK_START_ARGS=--accept-license --answer-yes --no-prompt
        - SPLUNK_PASSWORD=dingdong
        - SPLUNK_APPS_URL=https://raw.githubusercontent.com/JohnnyMirza/confluent_splunk_demo/main/splunk-add-on-for-cisco-asa_410.tgz
      volumes:
        - ../splunk/splunk-uf1/:/opt/splunkforwarder/etc/apps/splunk-uf1/
      ports:
        - "3333"

  splunk_eventgen:
    image: guilhemmarchand/splunk-eventgen:latest
    container_name: splunk_eventgen
    restart: unless-stopped
    user: 'root'
    volumes:
      - ../splunk/splunk-eventgen/:/opt/splunk-eventgen
    ports:
      - 6379:6379
      - 9500:9500
    depends_on:
      - splunk_uf1
    command: 'splunk_eventgen -v generate /opt/splunk-eventgen/default/eventgen.conf'

  sigma-zeek-dns-streams:
    image: streamingblocks/confluent-sigma:1.3.1
    container_name: sigma-zeek-dns-streams
    hostname: sigma-zeek-dns-streams
    environment:
      application_id: 'zeek-dns-rules-streams-app'
      bootstrap_servers: $BOOTSTRAP_SERVERS
      schema_registry: $SCHEMA_REGISTRY_URL
      security_protocol: SASL_SSL
      sasl_jaas_config: $SASL_JAAS_CONFIG
      sasl_mechanism: PLAIN
      schema_registry_basic_auth_credentials_source: $BASIC_AUTH_CREDENTIALS_SOURCE
      schema_registry_basic_auth_user_info: $SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
      data_topic: 'dns'
      output_topic: 'dns-detection'
      field_mapping_file: '/tmp/config/splunk-zeek.yml'
      sigma_rules_topic: 'sigma-rules'
      sigma_rule_filter_product: 'zeek'
      sigma_rule_filter_service: 'dns'
    command:
      - -c
      - "trap 'exit 0' SIGTERM; while true; do usleep 200000; done"

  sigma-splunk-cisco-asa-streams:
    image: streamingblocks/confluent-sigma:1.3.1
    container_name: sigma-splunk-cisco-asa-streams
    platform: linux/amd64
    hostname: sigma-splunk-cisco-asa-streams
    environment:
      application_id: 'splunk-cisco-asa-rules-streams-app'
      bootstrap_servers: $BOOTSTRAP_SERVERS
      schema_registry: $SCHEMA_REGISTRY_URL
      security_protocol: SASL_SSL
      sasl_jaas_config: $SASL_JAAS_CONFIG
      sasl_mechanism: PLAIN
      schema_registry_basic_auth_credentials_source: $BASIC_AUTH_CREDENTIALS_SOURCE
      schema_registry_basic_auth_user_info: $SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
      data_topic: 'splunk-s2s-events'
      output_topic: 'splunk-cisco-asa-detection'
      field_mapping_file: '/tmp/config/splunk-zeek.yml'
      sigma_rules_topic: 'sigma-rules'
      sigma_rule_filter_product: 'splunk'
      sigma_rule_filter_service: 'cisco:asa'

  sigma-streams-ui:
    image: streamingblocks/confluent-sigma-ui:1.3.0
    container_name: sigma-streams-ui
    hostname: sigma-streams-ui
    platform: linux/amd64
    ports:
      - 8080:8080
    environment:
      bootstrap_servers: $BOOTSTRAP_SERVERS
      schema_registry: $SCHEMA_REGISTRY_URL
      security_protocol: SASL_SSL
      sasl_jaas_config: $SASL_JAAS_CONFIG
      sasl_mechanism: PLAIN
      schema_registry_basic_auth_credentials_source: $BASIC_AUTH_CREDENTIALS_SOURCE
      schema_registry_basic_auth_user_info: $SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
      group_id: 'sigma-streams-ui'
      auto_offset.reset: 'latest'
      key_deserializer: 'org.apache.kafka.common.serialization.StringDeserializer'
      value_deserializer: 'org.apache.kafka.common.serialization.StringDeserializer'
      topic_list: 'dns, dns-detection, splunk-s2s-events, firewalls'
      sigma_rules_topic: 'sigma-rules'
